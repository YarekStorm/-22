import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * Class representing a Lucas number.
 */
class LucasNumber {
    private int index;
    private int value;

    /**
     * Constructor for a Lucas number.
     *
     * @param index the index of the Lucas number in the sequence.
     * @param value the value of the Lucas number.
     */
    public LucasNumber(int index, int value) {
        this.index = index;
        this.value = value;
    }

    /**
     * Gets the value of the Lucas number.
     *
     * @return the value of the Lucas number.
     */
    public int getValue() {
        return value;
    }

    /**
     * Checks if the number can be represented in the form w^2 + 1.
     *
     * @return true if the number fits the form w^2 + 1, otherwise false.
     */
    public boolean isOfFormW2Plus1() {
        int wSquared = value - 1;
        return isPerfectSquare(wSquared);
    }

    /**
     * Checks if the number can be represented in the form w^2 - 1.
     *
     * @return true if the number fits the form w^2 - 1, otherwise false.
     */
    public boolean isOfFormW2Minus1() {
        int wSquared = value + 1;
        return isPerfectSquare(wSquared);
    }

    /**
     * Helper method to check if a number is a perfect square.
     *
     * @param num the number to check.
     * @return true if the number is a perfect square, otherwise false.
     */
    private boolean isPerfectSquare(int num) {
        if (num < 0) return false;
        int sqrt = (int) Math.sqrt(num);
        return sqrt * sqrt == num;
    }

    @Override
    public String toString() {
        return "LucasNumber{" +
                "index=" + index +
                ", value=" + value +
                '}';
    }
}

/**
 * Main class for generating and checking Lucas numbers.
 */
public class Main {

    /**
     * Generates the first N Lucas numbers.
     *
     * @param N the number of Lucas numbers to generate.
     * @return a list of generated Lucas numbers.
     */
    public static List<LucasNumber> generateLucasNumbers(int N) {
        List<LucasNumber> lucasNumbers = new ArrayList<>();

        if (N >= 1) lucasNumbers.add(new LucasNumber(0, 2));
        if (N >= 2) lucasNumbers.add(new LucasNumber(1, 1));

        int prev2 = 2, prev1 = 1;
        for (int i = 2; i < N; i++) {
            int current = prev1 + prev2;
            lucasNumbers.add(new LucasNumber(i, current));
            prev2 = prev1;
            prev1 = current;
        }

        return lucasNumbers;
    }

    /**
     * The main method of the program.
     *
     * @param args the command line arguments.
     */
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of Lucas numbers (N): ");
        int N = scanner.nextInt();

        List<LucasNumber> lucasNumbers = generateLucasNumbers(N);

        // Output all Lucas numbers
        System.out.println("The first " + N + " Lucas numbers:");
        for (LucasNumber lucas : lucasNumbers) {
            System.out.println(lucas.getValue());
        }

        // Output numbers that fit the form w^2 + 1
       /* System.out.println("\nLucas numbers that can be represented in the form w^2 + 1:");
        for (LucasNumber lucas : lucasNumbers) {
            if (lucas.isOfFormW2Plus1()) {
                System.out.println(lucas.getValue());
            }
        }
*/
        // Output numbers that fit the form w^2 - 1
        System.out.println("\nLucas numbers that can be represented in the form w^2 - 1:");
        for (LucasNumber lucas : lucasNumbers) {
            if (lucas.isOfFormW2Minus1()) {
                System.out.println(lucas.getValue());
            }
        }

        scanner.close();
    }
}
